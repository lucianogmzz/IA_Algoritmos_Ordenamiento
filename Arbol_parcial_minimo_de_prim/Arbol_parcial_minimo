import sys
import networkx as nx
import matplotlib.pyplot as plt

class Graph():
    def __init__(self, vertices):
        self.V = vertices
        self.graph = [[0 for _ in range(vertices)] for _ in range(vertices)]

    def minKey(self, key, mstSet):
        min_val = sys.maxsize
        min_index = -1

        for v in range(self.V):
            if key[v] < min_val and not mstSet[v]:
                min_val = key[v]
                min_index = v

        return min_index

    def primMST(self):
        key = [sys.maxsize] * self.V
        parent = [None] * self.V
        key[0] = 0
        mstSet = [False] * self.V
        parent[0] = -1

        for _ in range(self.V):
            u = self.minKey(key, mstSet)
            mstSet[u] = True

            for v in range(self.V):
                if self.graph[u][v] > 0 and not mstSet[v] and key[v] > self.graph[u][v]:
                    key[v] = self.graph[u][v]
                    parent[v] = u

        self.drawGraphWithMST(parent)

    def drawGraphWithMST(self, parent):
        G_nx = nx.Graph()

        # Añadir todas las aristas del grafo original
        for u in range(self.V):
            for v in range(self.V):
                if self.graph[u][v] != 0:
                    G_nx.add_edge(str(u), str(v), weight=self.graph[u][v])

        # Extraer las aristas del MST
        mst_edges = []
        for i in range(1, self.V):
            u = str(parent[i])
            v = str(i)
            mst_edges.append((u, v))

        pos = nx.spring_layout(G_nx, seed=42)

        # Dibujar todas las aristas del grafo original en gris
        nx.draw(G_nx, pos, with_labels=True, node_color='lightblue',
                node_size=1000, font_size=12, edge_color='gray')

        # Dibujar solo las aristas del MST encima, en verde y más gruesas
        nx.draw_networkx_edges(G_nx, pos, edgelist=mst_edges,
                               edge_color='green', width=3)

        # Dibujar etiquetas de peso
        edge_labels = nx.get_edge_attributes(G_nx, 'weight')
        nx.draw_networkx_edge_labels(G_nx, pos, edge_labels=edge_labels)

        plt.title("Grafo Original con Árbol de Expansión Mínimo (Prim)")
        plt.show()


# Código principal
if __name__ == '__main__':
    g = Graph(5)
    g.graph = [
        [0, 2, 0, 6, 0],
        [2, 0, 3, 8, 5],
        [0, 3, 0, 0, 7],
        [6, 8, 0, 0, 9],
        [0, 5, 7, 9, 0]
    ]

    g.primMST()
